-- NEXT
$or => Joins query clauses with a logical OR returns all 
       documents that match the conditions of either clause.
{$or: [{"Ano de Lançamento":2012}, {"Linguagem":"Inglês"}]}

db.Contas.find({ 
  $or: [
    { tipo: { $eq:'Conta salário' }, valor:{ $gte:9000 } }
  ]
}).project({tipo:1, valor:1})


$nor => Inverts the effect of a query expression and returns 
        documents that do not match the query expression.
{$nor: [{"Ano de Lançamento":2012}, {"Linguagem":"Inglês"}]}

db.Enderecos.find({
   $nor: [{
       estado:{$eq:'SP'}
   }]
}).project({cidade:1, estado:1}).sort({cidade:1})

$or AND and => Both at the same search
db.contas.find({
    $and: [       
        {"valor": {$gte: 8500}}
    ],
    $or: [
        {"tipo": /salário/i},
        {"tipo": /poupança/i},
    ]
}).projection({"numero_conta":1, "tipo":1, "valor":1}).sort({"valor":1})

=>The same result of the search above

db.contas.find({
    $or: [
        {"tipo": {$in: ["Conta salário","Conta poupança"]} }
    ],
    "valor":{$gte:8500}
})
.projection({"tipo":1, "valor":1})
.sort({"valor":1})

// $in => Matches any of the values specified in an array.
db.series.find({
   "Ano de lançamento": { $in: [2019,2015] }
}).project({"Serie":1, "Ano de lançamento":1})

// $nin => Matches none of the values specified in an array.
db.series.find({
    "Ano de lançamento": {$nin:[2015,2019]}
}).project({"Serie":1, "Ano de lançamento":1})

